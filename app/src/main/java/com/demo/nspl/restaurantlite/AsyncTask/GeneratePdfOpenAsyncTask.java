package com.demo.nspl.restaurantlite.AsyncTask;import android.annotation.SuppressLint;import android.app.ProgressDialog;import android.content.ActivityNotFoundException;import android.content.Context;import android.content.Intent;import android.net.Uri;import android.os.AsyncTask;import android.os.Environment;import android.util.Log;import android.widget.Toast;import androidx.core.content.FileProvider;import com.demo.nspl.restaurantlite.BuildConfig;import com.demo.nspl.restaurantlite.Global.ClsGlobal;import com.demo.nspl.restaurantlite.classes.ClsInventoryOrderDetail;import com.demo.nspl.restaurantlite.classes.ClsInventoryOrderMaster;import java.io.File;import java.util.List;public class  GeneratePdfOpenAsyncTask extends AsyncTask<String, Void, String> {    private ProgressDialog loading;    @SuppressLint("StaticFieldLeak")    private Context context;    private ClsInventoryOrderMaster clsInventoryOrderMaster;    private List<ClsInventoryOrderDetail> list_Current_Order;    private String getCurrentPdfFilePath="";    private static final String AUTHORITY=            BuildConfig.APPLICATION_ID+".myfileprovider";    public GeneratePdfOpenAsyncTask(Context context,                                    ClsInventoryOrderMaster clsInventoryOrderMaster,                                    List<ClsInventoryOrderDetail> list_Current_Order){        this.context = context;        this.clsInventoryOrderMaster = clsInventoryOrderMaster;        this.list_Current_Order = list_Current_Order;    }    @Override    protected void onPreExecute() {        super.onPreExecute();        loading = ClsGlobal._prProgressDialog(context                , "Generating PDF File...", false);        loading.show();        Log.d("onPreExecute", "onPreExecute call");    }    @Override    protected String doInBackground(String... strings) {        String result = "";//        getCurrentPdfFilePath = ClsHtmlToPdf.generatePDF(context,clsInventoryOrderMaster,list_Current_Order,"Generate Pdf");        Log.e("getCurrentPdfFilePath",getCurrentPdfFilePath);        if (!getCurrentPdfFilePath.equalsIgnoreCase("")){            result = "Successful";        }else {            result = "Failed";        }        return result;    }    @Override    protected void onPostExecute(String result) {        super.onPostExecute(result);        if (loading.isShowing()){            loading.dismiss();        }        if (result.equalsIgnoreCase("Successful")){            Log.d("onPostExecute", "Successful call");            viewPdf(getCurrentPdfFilePath,"/" + ClsGlobal.AppFolderName +"/POS_Sales_Invoice/");        }        Log.d("onPostExecute", "onPostExecute call");    }    private void viewPdf(String file,String directory) {        File pdfFile = new File(Environment.getExternalStorageDirectory() +"/"+directory+"/"+file);        Log.e("File","pdfFile" +pdfFile);        //   Uri uri=Uri.fromFile(pdfFile);        Uri outputUri= FileProvider.getUriForFile(context, AUTHORITY, pdfFile);        Log.e("File","uri--->>"+outputUri);        Intent viewFile = new Intent(Intent.ACTION_VIEW);        viewFile.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);        viewFile.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);        viewFile.setDataAndType(outputUri,"application/pdf");        context.startActivity(viewFile);        Log.d("FILE--", "path-- " + viewFile.setDataAndType(outputUri, "application/pdf"));        try {            context.startActivity(viewFile);        } catch (ActivityNotFoundException e) {            Toast.makeText(context, "Can't read pdf file", Toast.LENGTH_SHORT).show();        }    }}